---
const categoryId = import.meta.env.PUBLIC_GISCUS_CATEGORAY_ID;
const repodId = import.meta.env.PUBLIC_GISCUS_REPO_ID;
---

<script
  src="https://giscus.app/client.js"
  data-repo="pwh-pwh/astro-blog"
  data-repo-id={repodId}
  data-category="Announcements"
  data-category-id={categoryId}
  data-mapping="title"
  data-strict="0"
  data-reactions-enabled="1"
  data-emit-metadata="0"
  data-input-position="top"
  data-theme="preferred_color_scheme"
  data-lang="en"
  crossorigin="anonymous"
  async></script>

<script>
  // purple_dark noborder_light
  function getCurrentTheme(): string {
    let themeBtn = document.querySelector("#theme-btn");
    return themeBtn!!.getAttribute("aria-label")!!;
  }

  function getTheme(flag: boolean) {
    let currentTheme = getCurrentTheme();
    if (
      (currentTheme == "light" && flag) ||
      (currentTheme == "dark" && !flag)
    ) {
      return "noborder_light";
    } else {
      return "dark_tritanopia";
    }
  }

  function setIFrameTheme(flag: boolean) {
    const iframe = document.querySelector(
      "iframe.giscus-frame"
    ) as HTMLIFrameElement;
    iframe.contentWindow!!.postMessage(
      {
        giscus: {
          setConfig: {
            theme: getTheme(flag),
          },
        },
      },
      "https://giscus.app"
    );
  }

  let themeBtn = document.querySelector("#theme-btn") as HTMLButtonElement;
  themeBtn.onclick = event => {
    setIFrameTheme(false);
  };

  await new Promise(resolve => setTimeout(resolve, 1500));
  setIFrameTheme(true);
</script>
